// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mezo/ethereum_sidecar/v1/ethereum_sidecar_bridge_out.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/mezo-org/mezod/x/bridge/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AssetsUnlockedEntriesRequest is the request type for the
// AssetsUnlockedEntries query.
type AssetsUnlockedEntriesRequest struct {
	// sequence_start is the start of the sequence range (inclusive). If null,
	// unbounded on the lower side.
	SequenceStart cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=sequence_start,json=sequenceStart,proto3,customtype=cosmossdk.io/math.Int" json:"sequence_start"`
	// sequence_end is the end of the sequence range (exclusive). If null,
	// unbounded on the upper side.
	SequenceEnd cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=sequence_end,json=sequenceEnd,proto3,customtype=cosmossdk.io/math.Int" json:"sequence_end"`
}

func (m *AssetsUnlockedEntriesRequest) Reset()         { *m = AssetsUnlockedEntriesRequest{} }
func (m *AssetsUnlockedEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AssetsUnlockedEntriesRequest) ProtoMessage()    {}
func (*AssetsUnlockedEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e84e01faa13b80, []int{0}
}
func (m *AssetsUnlockedEntriesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsUnlockedEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsUnlockedEntriesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsUnlockedEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsUnlockedEntriesRequest.Merge(m, src)
}
func (m *AssetsUnlockedEntriesRequest) XXX_Size() int {
	return m.Size()
}
func (m *AssetsUnlockedEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsUnlockedEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsUnlockedEntriesRequest proto.InternalMessageInfo

// AssetsUnlockedEntriesResponse is the response type for the
// AssetsUnlockedEntries query.
type AssetsUnlockedEntriesResponse struct {
	// entries contains a list of AssetsUnlocked.
	Entries []*types.AssetsUnlocked `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (m *AssetsUnlockedEntriesResponse) Reset()         { *m = AssetsUnlockedEntriesResponse{} }
func (m *AssetsUnlockedEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AssetsUnlockedEntriesResponse) ProtoMessage()    {}
func (*AssetsUnlockedEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e84e01faa13b80, []int{1}
}
func (m *AssetsUnlockedEntriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsUnlockedEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsUnlockedEntriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsUnlockedEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsUnlockedEntriesResponse.Merge(m, src)
}
func (m *AssetsUnlockedEntriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *AssetsUnlockedEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsUnlockedEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsUnlockedEntriesResponse proto.InternalMessageInfo

func (m *AssetsUnlockedEntriesResponse) GetEntries() []*types.AssetsUnlocked {
	if m != nil {
		return m.Entries
	}
	return nil
}

// AssetsUnlockedSequenceTipRequest is the request type for the
// AssetsUnlockedSequenceTip query.
type AssetsUnlockedSequenceTipRequest struct {
}

func (m *AssetsUnlockedSequenceTipRequest) Reset()         { *m = AssetsUnlockedSequenceTipRequest{} }
func (m *AssetsUnlockedSequenceTipRequest) String() string { return proto.CompactTextString(m) }
func (*AssetsUnlockedSequenceTipRequest) ProtoMessage()    {}
func (*AssetsUnlockedSequenceTipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e84e01faa13b80, []int{2}
}
func (m *AssetsUnlockedSequenceTipRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsUnlockedSequenceTipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsUnlockedSequenceTipRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsUnlockedSequenceTipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsUnlockedSequenceTipRequest.Merge(m, src)
}
func (m *AssetsUnlockedSequenceTipRequest) XXX_Size() int {
	return m.Size()
}
func (m *AssetsUnlockedSequenceTipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsUnlockedSequenceTipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsUnlockedSequenceTipRequest proto.InternalMessageInfo

// AssetsUnlockedSequenceTipResponse is the response type for the
// AssetsUnlockedSequenceTip query.
type AssetsUnlockedSequenceTipResponse struct {
	// sequence_tip is the current sequence tip for assets unlocked entries.
	SequenceTip cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=sequence_tip,json=sequenceTip,proto3,customtype=cosmossdk.io/math.Int" json:"sequence_tip"`
}

func (m *AssetsUnlockedSequenceTipResponse) Reset()         { *m = AssetsUnlockedSequenceTipResponse{} }
func (m *AssetsUnlockedSequenceTipResponse) String() string { return proto.CompactTextString(m) }
func (*AssetsUnlockedSequenceTipResponse) ProtoMessage()    {}
func (*AssetsUnlockedSequenceTipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e84e01faa13b80, []int{3}
}
func (m *AssetsUnlockedSequenceTipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsUnlockedSequenceTipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsUnlockedSequenceTipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsUnlockedSequenceTipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsUnlockedSequenceTipResponse.Merge(m, src)
}
func (m *AssetsUnlockedSequenceTipResponse) XXX_Size() int {
	return m.Size()
}
func (m *AssetsUnlockedSequenceTipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsUnlockedSequenceTipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsUnlockedSequenceTipResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AssetsUnlockedEntriesRequest)(nil), "mezo.ethereum_sidecar.v1.AssetsUnlockedEntriesRequest")
	proto.RegisterType((*AssetsUnlockedEntriesResponse)(nil), "mezo.ethereum_sidecar.v1.AssetsUnlockedEntriesResponse")
	proto.RegisterType((*AssetsUnlockedSequenceTipRequest)(nil), "mezo.ethereum_sidecar.v1.AssetsUnlockedSequenceTipRequest")
	proto.RegisterType((*AssetsUnlockedSequenceTipResponse)(nil), "mezo.ethereum_sidecar.v1.AssetsUnlockedSequenceTipResponse")
}

func init() {
	proto.RegisterFile("mezo/ethereum_sidecar/v1/ethereum_sidecar_bridge_out.proto", fileDescriptor_73e84e01faa13b80)
}

var fileDescriptor_73e84e01faa13b80 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xbd, 0x8e, 0xd3, 0x40,
	0x10, 0xf6, 0x06, 0x09, 0xc4, 0x06, 0x28, 0x2c, 0x22, 0x19, 0x43, 0x9c, 0xe0, 0x2a, 0x0d, 0x6b,
	0x12, 0x24, 0x40, 0xa1, 0x81, 0x88, 0x14, 0xd0, 0x20, 0xc5, 0xa1, 0x80, 0xc6, 0x4a, 0xec, 0x91,
	0xb3, 0x0a, 0xf6, 0x9a, 0xdd, 0xb5, 0x25, 0x78, 0x82, 0x2b, 0xaf, 0xb8, 0x67, 0xb8, 0x17, 0xb9,
	0x26, 0x65, 0xca, 0xd3, 0x15, 0xd1, 0x29, 0x79, 0x91, 0x93, 0xff, 0xa2, 0xcb, 0xe5, 0x12, 0xe5,
	0xae, 0x1b, 0xed, 0x7c, 0xdf, 0xcc, 0x7c, 0xdf, 0xec, 0xe0, 0x6e, 0x00, 0xff, 0x99, 0x05, 0x72,
	0x02, 0x1c, 0xe2, 0xc0, 0x11, 0xd4, 0x03, 0x77, 0xc4, 0xad, 0xa4, 0xbd, 0xf5, 0xe6, 0x8c, 0x39,
	0xf5, 0x7c, 0x70, 0x58, 0x2c, 0x49, 0xc4, 0x99, 0x64, 0xaa, 0x96, 0x72, 0xc9, 0x4d, 0x1c, 0x49,
	0xda, 0xfa, 0x73, 0x9f, 0xf9, 0x2c, 0x03, 0x59, 0x69, 0x94, 0xe3, 0xf5, 0x97, 0x59, 0xaf, 0xbc,
	0x4c, 0xda, 0x21, 0x8f, 0xf2, 0xa4, 0x79, 0x8a, 0xf0, 0xab, 0x2f, 0x42, 0x80, 0x14, 0x3f, 0xc3,
	0x3f, 0xcc, 0x9d, 0x82, 0xd7, 0x0f, 0x25, 0xa7, 0x20, 0x06, 0xf0, 0x37, 0x06, 0x21, 0xd5, 0xaf,
	0xf8, 0x99, 0x48, 0xc3, 0xd0, 0x05, 0x47, 0xc8, 0x11, 0x97, 0x1a, 0x6a, 0xa2, 0xd6, 0xe3, 0x5e,
	0x7d, 0xb6, 0x68, 0x28, 0x17, 0x8b, 0x46, 0xcd, 0x65, 0x22, 0x60, 0x42, 0x78, 0x53, 0x42, 0x99,
	0x15, 0x8c, 0xe4, 0x84, 0x7c, 0x0b, 0xe5, 0xe0, 0x69, 0x49, 0xb2, 0x53, 0x8e, 0xfa, 0x19, 0x3f,
	0x59, 0x57, 0x81, 0xd0, 0xd3, 0x2a, 0x87, 0xd4, 0xa8, 0x96, 0x94, 0x7e, 0xe8, 0x99, 0xbf, 0x70,
	0x7d, 0xc7, 0x9c, 0x22, 0x62, 0xa1, 0x00, 0xf5, 0x23, 0x7e, 0x04, 0xf9, 0x93, 0x86, 0x9a, 0x0f,
	0x5a, 0xd5, 0x8e, 0x41, 0x32, 0xa3, 0x0a, 0xb9, 0x49, 0x9b, 0x6c, 0xf2, 0x07, 0x25, 0xdc, 0x34,
	0x71, 0x73, 0x33, 0x65, 0x17, 0x7d, 0x87, 0x34, 0x2a, 0x6c, 0x30, 0x01, 0xbf, 0xde, 0x83, 0x29,
	0x46, 0xb8, 0xae, 0x52, 0xd2, 0xe8, 0x30, 0xa7, 0xd6, 0x2a, 0x87, 0x34, 0xea, 0x9c, 0x55, 0x70,
	0xa3, 0x5f, 0x6c, 0xd6, 0xce, 0x17, 0xdb, 0xcb, 0xe6, 0xff, 0x11, 0x4b, 0x1b, 0x78, 0x42, 0x5d,
	0x50, 0x8f, 0x10, 0xae, 0xdd, 0x6a, 0x85, 0xfa, 0x9e, 0xec, 0xfa, 0x1a, 0x64, 0xdf, 0x8e, 0xf5,
	0x0f, 0x77, 0xe6, 0x15, 0x82, 0x4f, 0x10, 0x7e, 0xb1, 0xd3, 0x16, 0xb5, 0x7b, 0x68, 0xd9, 0x6d,
	0xbf, 0xf5, 0x4f, 0xf7, 0xe2, 0xe6, 0x63, 0xf5, 0xbe, 0xcf, 0x96, 0x06, 0x9a, 0x2f, 0x0d, 0x74,
	0xb9, 0x34, 0xd0, 0xf1, 0xca, 0x50, 0xe6, 0x2b, 0x43, 0x39, 0x5f, 0x19, 0xca, 0xef, 0xb7, 0x3e,
	0x95, 0x93, 0x78, 0x4c, 0x5c, 0x16, 0x58, 0x69, 0x83, 0x37, 0x8c, 0xfb, 0x59, 0xe0, 0xad, 0x0f,
	0xcf, 0x2a, 0x8f, 0x51, 0xfe, 0x8b, 0x40, 0x8c, 0x1f, 0x66, 0x77, 0xf2, 0xee, 0x2a, 0x00, 0x00,
	0xff, 0xff, 0xfa, 0xb0, 0xcc, 0xc4, 0xb2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EthereumSidecarBridgeOutServiceClient is the client API for EthereumSidecarBridgeOutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EthereumSidecarBridgeOutServiceClient interface {
	// AssetsUnlockedEntries returns AssetsUnlocked entries within a sequence
	// range.
	AssetsUnlockedEntries(ctx context.Context, in *AssetsUnlockedEntriesRequest, opts ...grpc.CallOption) (*AssetsUnlockedEntriesResponse, error)
	// AssetsUnlockedSequenceTip returns the assets unlocked sequence tip.
	AssetsUnlockedSequenceTip(ctx context.Context, in *AssetsUnlockedSequenceTipRequest, opts ...grpc.CallOption) (*AssetsUnlockedSequenceTipResponse, error)
}

type ethereumSidecarBridgeOutServiceClient struct {
	cc grpc1.ClientConn
}

func NewEthereumSidecarBridgeOutServiceClient(cc grpc1.ClientConn) EthereumSidecarBridgeOutServiceClient {
	return &ethereumSidecarBridgeOutServiceClient{cc}
}

func (c *ethereumSidecarBridgeOutServiceClient) AssetsUnlockedEntries(ctx context.Context, in *AssetsUnlockedEntriesRequest, opts ...grpc.CallOption) (*AssetsUnlockedEntriesResponse, error) {
	out := new(AssetsUnlockedEntriesResponse)
	err := c.cc.Invoke(ctx, "/mezo.ethereum_sidecar.v1.EthereumSidecarBridgeOutService/AssetsUnlockedEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ethereumSidecarBridgeOutServiceClient) AssetsUnlockedSequenceTip(ctx context.Context, in *AssetsUnlockedSequenceTipRequest, opts ...grpc.CallOption) (*AssetsUnlockedSequenceTipResponse, error) {
	out := new(AssetsUnlockedSequenceTipResponse)
	err := c.cc.Invoke(ctx, "/mezo.ethereum_sidecar.v1.EthereumSidecarBridgeOutService/AssetsUnlockedSequenceTip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EthereumSidecarBridgeOutServiceServer is the server API for EthereumSidecarBridgeOutService service.
type EthereumSidecarBridgeOutServiceServer interface {
	// AssetsUnlockedEntries returns AssetsUnlocked entries within a sequence
	// range.
	AssetsUnlockedEntries(context.Context, *AssetsUnlockedEntriesRequest) (*AssetsUnlockedEntriesResponse, error)
	// AssetsUnlockedSequenceTip returns the assets unlocked sequence tip.
	AssetsUnlockedSequenceTip(context.Context, *AssetsUnlockedSequenceTipRequest) (*AssetsUnlockedSequenceTipResponse, error)
}

// UnimplementedEthereumSidecarBridgeOutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEthereumSidecarBridgeOutServiceServer struct {
}

func (*UnimplementedEthereumSidecarBridgeOutServiceServer) AssetsUnlockedEntries(ctx context.Context, req *AssetsUnlockedEntriesRequest) (*AssetsUnlockedEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssetsUnlockedEntries not implemented")
}
func (*UnimplementedEthereumSidecarBridgeOutServiceServer) AssetsUnlockedSequenceTip(ctx context.Context, req *AssetsUnlockedSequenceTipRequest) (*AssetsUnlockedSequenceTipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssetsUnlockedSequenceTip not implemented")
}

func RegisterEthereumSidecarBridgeOutServiceServer(s grpc1.Server, srv EthereumSidecarBridgeOutServiceServer) {
	s.RegisterService(&_EthereumSidecarBridgeOutService_serviceDesc, srv)
}

func _EthereumSidecarBridgeOutService_AssetsUnlockedEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetsUnlockedEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthereumSidecarBridgeOutServiceServer).AssetsUnlockedEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mezo.ethereum_sidecar.v1.EthereumSidecarBridgeOutService/AssetsUnlockedEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthereumSidecarBridgeOutServiceServer).AssetsUnlockedEntries(ctx, req.(*AssetsUnlockedEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EthereumSidecarBridgeOutService_AssetsUnlockedSequenceTip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetsUnlockedSequenceTipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthereumSidecarBridgeOutServiceServer).AssetsUnlockedSequenceTip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mezo.ethereum_sidecar.v1.EthereumSidecarBridgeOutService/AssetsUnlockedSequenceTip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthereumSidecarBridgeOutServiceServer).AssetsUnlockedSequenceTip(ctx, req.(*AssetsUnlockedSequenceTipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EthereumSidecarBridgeOutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mezo.ethereum_sidecar.v1.EthereumSidecarBridgeOutService",
	HandlerType: (*EthereumSidecarBridgeOutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssetsUnlockedEntries",
			Handler:    _EthereumSidecarBridgeOutService_AssetsUnlockedEntries_Handler,
		},
		{
			MethodName: "AssetsUnlockedSequenceTip",
			Handler:    _EthereumSidecarBridgeOutService_AssetsUnlockedSequenceTip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mezo/ethereum_sidecar/v1/ethereum_sidecar_bridge_out.proto",
}

func (m *AssetsUnlockedEntriesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsUnlockedEntriesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsUnlockedEntriesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.SequenceEnd.Size()
		i -= size
		if _, err := m.SequenceEnd.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEthereumSidecarBridgeOut(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.SequenceStart.Size()
		i -= size
		if _, err := m.SequenceStart.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEthereumSidecarBridgeOut(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AssetsUnlockedEntriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsUnlockedEntriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsUnlockedEntriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintEthereumSidecarBridgeOut(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AssetsUnlockedSequenceTipRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsUnlockedSequenceTipRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsUnlockedSequenceTipRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AssetsUnlockedSequenceTipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsUnlockedSequenceTipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsUnlockedSequenceTipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.SequenceTip.Size()
		i -= size
		if _, err := m.SequenceTip.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEthereumSidecarBridgeOut(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintEthereumSidecarBridgeOut(dAtA []byte, offset int, v uint64) int {
	offset -= sovEthereumSidecarBridgeOut(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AssetsUnlockedEntriesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SequenceStart.Size()
	n += 1 + l + sovEthereumSidecarBridgeOut(uint64(l))
	l = m.SequenceEnd.Size()
	n += 1 + l + sovEthereumSidecarBridgeOut(uint64(l))
	return n
}

func (m *AssetsUnlockedEntriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovEthereumSidecarBridgeOut(uint64(l))
		}
	}
	return n
}

func (m *AssetsUnlockedSequenceTipRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AssetsUnlockedSequenceTipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SequenceTip.Size()
	n += 1 + l + sovEthereumSidecarBridgeOut(uint64(l))
	return n
}

func sovEthereumSidecarBridgeOut(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEthereumSidecarBridgeOut(x uint64) (n int) {
	return sovEthereumSidecarBridgeOut(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AssetsUnlockedEntriesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecarBridgeOut
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsUnlockedEntriesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsUnlockedEntriesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceStart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SequenceStart.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceEnd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SequenceEnd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecarBridgeOut(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssetsUnlockedEntriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecarBridgeOut
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsUnlockedEntriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsUnlockedEntriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &types.AssetsUnlocked{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecarBridgeOut(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssetsUnlockedSequenceTipRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecarBridgeOut
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsUnlockedSequenceTipRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsUnlockedSequenceTipRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecarBridgeOut(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssetsUnlockedSequenceTipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecarBridgeOut
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsUnlockedSequenceTipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsUnlockedSequenceTipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceTip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SequenceTip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecarBridgeOut(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecarBridgeOut
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEthereumSidecarBridgeOut(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEthereumSidecarBridgeOut
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEthereumSidecarBridgeOut
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEthereumSidecarBridgeOut
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEthereumSidecarBridgeOut
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEthereumSidecarBridgeOut
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEthereumSidecarBridgeOut        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEthereumSidecarBridgeOut          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEthereumSidecarBridgeOut = fmt.Errorf("proto: unexpected end of group")
)
